{"version":3,"sources":["components/KakaoMap.js","components/RNListener.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","KaKaoMap","kakao","window","useEffect","container","document","getElementById","options","center","maps","LatLng","level","Map","requestPermission","ReactNativeWebView","postMessage","JSON","stringify","message","id","RNListener","children","listener","event","parse","data","type","console","log","addEventListener","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gOAoCMA,EAAYC,IAAOC,IAAV,+DAKAC,EArCE,WAAO,IAEZC,EAAUC,OAAVD,MAERE,qBAAU,WACN,IAAIC,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACVC,OAAQ,IAAIP,EAAMQ,KAAKC,OAAO,mBAAoB,oBAClDC,MAAO,GAED,IAAIV,EAAMQ,KAAKG,IAAIR,EAAWG,KAC1C,IAEFJ,qBAAU,WACNU,MACF,IAEF,IAAMA,EAAoB,WACnBX,OAAOY,oBACNZ,OAAOY,mBAAmBC,YACtBC,KAAKC,UAAU,CAACC,QAAS,mCAKrC,OACI,cAACrB,EAAD,CAAWsB,GAAG,SCRPC,EArBI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACXC,EAAW,SAACC,GAAW,IAAD,EACDP,KAAKQ,MAAMD,EAAME,MAAhCA,EADgB,EAChBA,KACM,aAFU,EACVC,MAEVC,QAAQC,IAAIH,IAUpB,OAPIvB,OAAOY,qBAEPT,SAASwB,iBAAiB,UAAWP,GAErCpB,OAAO2B,iBAAiB,UAAWP,IAInC,mCACKD,KCHES,MAVf,WACE,OACE,cAAC,IAAMC,SAAP,UACI,cAAC,EAAD,UACE,cAAC,EAAD,SCIKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,M","file":"static/js/main.7c7fe724.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from \"styled-components\";\nimport {useEffect} from \"react\";\n\nconst KaKaoMap = () => {\n\n    const { kakao } = window\n\n    useEffect(() => {\n        let container = document.getElementById('map');\n        let options = {\n            center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n            level: 3,\n        }\n        let map = new kakao.maps.Map(container, options)\n    },[])\n\n    useEffect(() => {\n        requestPermission();\n    },[])\n\n    const requestPermission = () => {\n        if(window.ReactNativeWebView) {\n            window.ReactNativeWebView.postMessage(\n                JSON.stringify({message: 'this is message from webview'})\n            )\n        }\n    }\n\n    return(\n        <Container id=\"map\">\n\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default KaKaoMap;\n","\nconst RNListener = ({children}) => {\n    const listener = (event) => {\n        const { data, type } = JSON.parse(event.data);\n        if ( type === \"Location\" ) {\n            console.log(data)\n        }\n    };\n    if (window.ReactNativeWebView){\n        // android\n        document.addEventListener(\"message\", listener);\n        // ios\n        window.addEventListener(\"message\", listener);\n    }\n\n    return (\n        <>\n            {children}\n        </>\n    )\n};\n\nexport default RNListener;\n","import React from 'react';\nimport KaKaoMap from \"./components/KakaoMap\";\nimport RNListener from \"./components/RNListener\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n        <RNListener>\n          <KaKaoMap />\n        </RNListener>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}