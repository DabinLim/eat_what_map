{"version":3,"sources":["components/KakaoMap.js","App.js","reportWebVitals.js","index.js"],"names":["listener","event","console","log","data","JSON","parse","type","kakao","window","Container","styled","div","KaKaoMap","useEffect","container","document","getElementById","options","center","maps","LatLng","level","Map","ReactNativeWebView","addEventListener","removeEventListener","requestPermission","postMessage","stringify","message","id","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gOAIMA,EAAW,SAACC,GACdC,QAAQC,IAAIF,EAAMG,MADM,MAEDC,KAAKC,MAAML,EAAMG,MAAhCA,EAFgB,EAEhBA,KACM,aAHU,EAEVG,MAEVL,QAAQC,IAAIC,IAIZI,EAAUC,OAAVD,MA6CFE,EAAYC,IAAOC,IAAV,+DAKAC,EAhDE,WAEbC,qBAAU,WACN,IAAIC,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACVC,OAAQ,IAAIX,EAAMY,KAAKC,OAAO,mBAAoB,oBAClDC,MAAO,GAED,IAAId,EAAMY,KAAKG,IAAIR,EAAWG,KAC1C,IAEFJ,qBAAU,WAON,OANIL,OAAOe,qBAEPR,SAASS,iBAAiB,UAAWzB,GAErCS,OAAOgB,iBAAiB,UAAWzB,IAEhC,WACHgB,SAASU,oBAAoB,UAAW1B,GACxCS,OAAOiB,oBAAoB,UAAW1B,MAE5C,IAEFc,qBAAU,WACNa,MACF,IAEF,IAAMA,EAAoB,WACnBlB,OAAOe,oBACNf,OAAOe,mBAAmBI,YACtBvB,KAAKwB,UAAU,CAACC,QAAS,mCAKrC,OACI,cAACpB,EAAD,CAAWqB,GAAG,SCxCPC,MARf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BiB,M","file":"static/js/main.adfd427a.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from \"styled-components\";\nimport {useEffect} from \"react\";\n\nconst listener = (event) => {\n    console.log(event.data);\n    const { data, type } = JSON.parse(event.data);\n    if ( type === \"Location\" ) {\n        console.log(data)\n    }\n};\n\nconst { kakao } = window\n\nconst KaKaoMap = () => {\n\n    useEffect(() => {\n        let container = document.getElementById('map');\n        let options = {\n            center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n            level: 3,\n        }\n        let map = new kakao.maps.Map(container, options)\n    },[])\n\n    useEffect(() => {\n        if (window.ReactNativeWebView){\n            // android\n            document.addEventListener(\"message\", listener);\n            // ios\n            window.addEventListener(\"message\", listener);\n        }\n        return () => {\n            document.removeEventListener(\"message\", listener);\n            window.removeEventListener(\"message\", listener);\n        }\n    },[])\n\n    useEffect(() => {\n        requestPermission();\n    },[])\n\n    const requestPermission = () => {\n        if(window.ReactNativeWebView) {\n            window.ReactNativeWebView.postMessage(\n                JSON.stringify({message: 'this is message from webview'})\n            )\n        }\n    }\n\n    return(\n        <Container id=\"map\">\n\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default KaKaoMap;\n","import React from 'react';\nimport KaKaoMap from \"./components/KakaoMap\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <KaKaoMap />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}